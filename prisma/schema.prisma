
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("CONNECTION_STRING")

}

model User {
  id        Int      @id @default(autoincrement())
  firstName String 
  lastName String
  email     String   @unique
  hash      String
  hashedRT  String?
  otp Otp[] // one to many
  isSuperAdmin Boolean @default(false)
  isBanned Boolean @default(false)
  createdAt DateTime @default(now())
  inventory Inventory[]
  @@map("users")
}

model Otp {
  id        Int      @id @default(autoincrement())
  userId  Int   
  otpCode Int  
  user    User      @relation(fields: [userId], references: [id])
  expiryDate DateTime
  @@unique([userId, otpCode]) // this make the compination of both filded unique
 
  @@map("otp")
}

model Inventory {
  id Int @id @default(autoincrement())
  userId Int 
  user User @relation(fields: [userId], references: [id])
  name String
  barcode String
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  brandId Int
  brand Brand @relation(fields: [brandId], references: [id])
  buyingPrice Decimal @db.Money
  sellingPrice Decimal @db.Money
  productUnit Unit
  quantity Int
  minStock Int @default(10)
  taxType Tax
  description String
  produtType Product
  imageId Image[] // one to many

  @@map("inventory")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  inventory Inventory[] // one to many

  @@map("category")
}

model Brand {
  id Int @id @default(autoincrement())
  name String @unique
  inventory Inventory[] // one to many

  @@map("brand")
}

model Image {
  id Int @id @default(autoincrement())
  imageId Int
  imageURL String
  inventory Inventory @relation(fields: [imageId], references: [id])
  
  @@map("image")
}

enum Unit {
  pieces
  kilograms
  liters
  boxes 
  meters
}

enum Tax {
  taxable
  nonTaxable 
}

enum Product {
  Sale
  Use
}